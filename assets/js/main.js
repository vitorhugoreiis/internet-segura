document.addEventListener('DOMContentLoaded', function() {
  // Gerenciamento de todos os modais
  const modals = {
    solutions: document.getElementById('solutionModal'),
    tips: document.getElementById('modal')
  };

  // Conte√∫do das solu√ß√µes para cada golpe e dica
  const solutionContent = {
    'whatsapp-ia': {
      icon: 'ü§ñ',
      title: 'Clonagem de WhatsApp com IA',
      description: 'Criminosos usam intelig√™ncia artificial para clonar vozes e aplicar golpes mais convincentes.',
      steps: [
        'Ative a verifica√ß√£o em duas etapas no WhatsApp',
        'Desconfie de √°udios ou chamadas suspeitas',
        'Confirme pessoalmente pedidos de dinheiro',
        'N√£o compartilhe c√≥digos recebidos por SMS',
        'Use um PIN forte na verifica√ß√£o em duas etapas'
      ],
      tips: 'ALERTA 2025: Os golpistas agora usam IA para imitar vozes com perfei√ß√£o. Sempre confirme pessoalmente!'
    },
    'investimento': {
      icon: 'üìà',
      title: 'Falso Investimento',
      description: 'Ofertas de investimentos milagrosos com retornos irreais e garantidos.',
      steps: [
        'Desconfie de retornos muito acima do mercado',
        'Verifique se a empresa √© regulamentada pela CVM',
        'N√£o invista por indica√ß√£o de desconhecidos',
        'Pesquise sobre a empresa e seus respons√°veis',
        'Evite press√£o para investir rapidamente'
      ],
      tips: 'CUIDADO: Em 2025, esse golpe j√° causou preju√≠zo de R$2.5 bilh√µes. Se parece bom demais, provavelmente √© golpe!'
    },
    // Dicas de seguran√ßa
    'senha': {
      icon: 'üîí',
      title: 'Senhas Seguras',
      description: 'Use 8+ caracteres, misture mai√∫sculas, min√∫sculas, n√∫meros e s√≠mbolos.',
      steps: [
        'Use letras mai√∫sculas e min√∫sculas',
        'Adicione n√∫meros em posi√ß√µes aleat√≥rias',
        'Inclua s√≠mbolos como @, !, _, #',
        'Evite sequ√™ncias √≥bvias',
        'Nunca use a mesma senha em v√°rios servi√ßos'
      ],
      tips: 'EXEMPLO: Troque "Maria2025" por "M@r!a_2O25" para maior seguran√ßa.'
    },
    'pix': {
      icon: '‚ùì',
      title: 'Falsos Comprovantes de Pix',
      description: 'Golpistas criam comprovantes falsos de Pix usando templates e ferramentas de edi√ß√£o de imagem.',
      steps: [
        'Sempre confira o recebimento no app do seu banco',
        'N√£o confie em screenshots ou imagens de comprovantes',
        'Aguarde a confirma√ß√£o oficial da transa√ß√£o',
        'Configure notifica√ß√µes do seu banco',
        'Em caso de golpe, registre um boletim de ocorr√™ncia'
      ],
      tips: 'ATEN√á√ÉO: A confirma√ß√£o do Pix √© instant√¢nea. Se o dinheiro n√£o apareceu na conta, n√£o foi feito!'
    },
    '2fa': {
      icon: 'üîê',
      title: 'Autentica√ß√£o em 2 Passos',
      description: 'Ative a verifica√ß√£o em duas etapas para maior seguran√ßa em todas suas contas.',
      steps: [
        'Abra as configura√ß√µes do app',
        'Procure por "Seguran√ßa" ou "Privacidade"',
        'Ative a verifica√ß√£o em duas etapas',
        'Configure um PIN de seguran√ßa',
        'Salve um e-mail de recupera√ß√£o'
      ],
      tips: 'CONFIGURA√á√ÉO: No WhatsApp, v√° em Configura√ß√µes ‚Üí Conta ‚Üí Verifica√ß√£o em duas etapas'
    },
    'update': {
      icon: 'üì±',
      title: 'Atualize Seu Aparelho',
      description: 'Mantenha seu celular sempre atualizado para prote√ß√£o contra falhas de seguran√ßa.',
      steps: [
        'Conecte-se a uma rede Wi-Fi',
        'Verifique se h√° atualiza√ß√µes',
        'Fa√ßa backup dos seus dados',
        'Instale as atualiza√ß√µes',
        'Reinicie o aparelho quando solicitado'
      ],
      tips: 'ONDE ENCONTRAR: Acesse Configura√ß√µes ‚Üí Sistema ‚Üí Atualiza√ß√£o do sistema'
    },
    'wifi': {
      icon: "üì∂",
      title: "Wi-Fi Seguro",
      description: "Evite redes desconhecidas. Use dados m√≥veis para transa√ß√µes importantes.",
      steps: [
        'Prefira redes conhecidas e confi√°veis',
        'Evite fazer transa√ß√µes em Wi-Fi p√∫blico',
        'Use dados m√≥veis para apps banc√°rios',
        'Mantenha o Wi-Fi desligado quando n√£o usar',
        'N√£o salve senhas em redes p√∫blicas'
      ],
      tips: 'SEGURAN√áA: Nunca fa√ßa opera√ß√µes banc√°rias ou compras em redes Wi-Fi p√∫blicas!'
    },
    'emprego': {
      icon: "üíº",
      title: "Falsa Vaga de Emprego",
      description: "Golpistas criam vagas falsas para roubar dados pessoais ou dinheiro das v√≠timas.",
      steps: [
        'Pesquise a empresa no Google e redes sociais',
        'Desconfie de propostas muito vantajosas',
        'Nunca pague por "materiais de treinamento"',
        'N√£o forne√ßa dados banc√°rios em entrevistas',
        'Verifique o CNPJ da empresa'
      ],
      tips: 'ATEN√á√ÉO: Empresas s√©rias nunca pedem pagamento para participar de processos seletivos!'
    },
    'premio': {
      icon: "üéØ",
      title: "Falso Pr√™mio",
      description: "Mensagens sobre pr√™mios, sorteios ou promo√ß√µes que voc√™ n√£o participou.",
      steps: [
        'Ignore mensagens de sorteios desconhecidos',
        'N√£o clique em links de promo√ß√µes',
        'Desconfie de pr√™mios muito altos',
        'Bloqueie remetentes suspeitos',
        'Nunca pague taxas para receber pr√™mios'
      ],
      tips: 'IMPORTANTE: Se voc√™ n√£o participou de nenhum sorteio, n√£o tem como ter ganhado!'
    },
    'ajuda': {
      icon: "üÜò",
      title: "Pedido de Ajuda Falso",
      description: "Criminosos se passam por parentes ou amigos pedindo dinheiro emergencial.",
      steps: [
        'Ligue para o n√∫mero original do contato',
        'Confirme a hist√≥ria com outros familiares',
        'N√£o fa√ßa transfer√™ncias precipitadas',
        'Verifique se o n√∫mero √© o mesmo de sempre',
        'Pergunte detalhes que s√≥ a pessoa saberia'
      ],
      tips: 'CUIDADO: Sempre ligue para o n√∫mero conhecido do seu contato para confirmar pedidos de dinheiro!'
    },
    'namoro': {
      icon: "‚ù§Ô∏è",
      title: "Golpe do Romance",
      description: "Golpistas criam perfis falsos em sites de relacionamento para extorquir dinheiro.",
      steps: [
        'Desconfie de estrangeiros muito interessados',
        'Nunca envie dinheiro para desconhecidos',
        'Pesquise as fotos do perfil no Google',
        'Evite compartilhar informa√ß√µes pessoais',
        'N√£o abra links enviados pelo contato'
      ],
      tips: 'ALERTA: Se algu√©m que voc√™ nunca viu pessoalmente pede dinheiro, √© golpe!'
    },
    'sms': {
      icon: 'üîó',
      title: 'Links Maliciosos por SMS',
      description: 'Mensagens SMS com links para sites falsos que roubam dados pessoais e banc√°rios.',
      steps: [
        'Nunca clique em links recebidos por SMS',
        'N√£o forne√ßa dados pessoais por mensagem',
        'Digite manualmente os endere√ßos dos sites que precisa acessar',
        'Mantenha seu antiv√≠rus atualizado',
        'Reporte SMS suspeitos para sua operadora'
      ],
      tips: 'DICA: Bancos e empresas oficiais n√£o enviam links por SMS. Sempre acesse os sites oficiais digitando o endere√ßo.'
    },
    'whatsapp-clonado': {
      icon: '‚ö†Ô∏è',
      title: 'WhatsApp Clonado',
      description: 'Golpistas tentam roubar sua conta do WhatsApp atrav√©s de c√≥digos de verifica√ß√£o.',
      steps: [
        'Nunca compartilhe c√≥digos recebidos por SMS',
        'Ative a verifica√ß√£o em duas etapas',
        'N√£o clique em links suspeitos',
        'Fa√ßa logout de sess√µes web suspeitas',
        'Contate o suporte do WhatsApp se necess√°rio'
      ],
      tips: 'ALERTA: Se suspeitar de clonagem, fa√ßa logout de sess√µes web e contate o suporte do WhatsApp imediatamente!'
    },
    'boleto': {
      icon: '‚ùó',
      title: 'Boleto Falso',
      description: 'Golpistas enviam cobran√ßas falsas atrav√©s de boletos adulterados.',
      steps: [
        'Sempre confirme via app do banco',
        'Verifique no site oficial antes de pagar',
        'Confira o benefici√°rio do boleto',
        'Desconfie de cobran√ßas inesperadas',
        'Verifique se os valores est√£o corretos'
      ],
      tips: 'IMPORTANTE: Desconfie de cobran√ßas inesperadas ou valores diferentes do usual. Sempre confirme no app do seu banco!'
    },
    'entrega': {
      icon: 'üì¶',
      title: 'Entrega Falsa',
      description: 'Golpistas se passam por empresas de entrega para roubar dados.',
      steps: [
        'N√£o clique em links de tracking desconhecidos',
        'Use apenas sites oficiais das transportadoras',
        'Verifique o remetente do email/SMS',
        'Nunca instale apps por links suspeitos',
        'Confira o c√≥digo de rastreio no site oficial'
      ],
      tips: 'CUIDADO: Use apenas os sites oficiais das transportadoras para rastrear suas encomendas!'
    },
    'telefone': {
      icon: 'üìû',
      title: 'Golpes por Telefone',
      description: 'Golpistas ligam se passando por bancos para roubar dados pessoais.',
      steps: [
        'Nunca forne√ßa senhas por telefone',
        'Bancos n√£o pedem dados pessoais',
        'Desligue se pedirem informa√ß√µes sens√≠veis',
        'Bloqueie n√∫meros suspeitos',
        'Procure ajuda em caso de d√∫vida'
      ],
      tips: 'ATEN√á√ÉO: Bancos NUNCA ligam pedindo senhas ou dados pessoais. Em caso de d√∫vida, bloqueie o n√∫mero e procure ajuda!'
    },
    'compras': {
      icon: 'üõí',
      title: 'Golpes em Compras Online',
      description: 'Sites falsos que imitam lojas conhecidas para roubar dados de cart√£o e dinheiro.',
      steps: [
        'Verifique se o site tem "https://" e cadeado na URL',
        'Pesquise a reputa√ß√£o da loja em sites confi√°veis',
        'Desconfie de pre√ßos muito abaixo do mercado',
        'Use cart√µes virtuais para compras online',
        'Guarde todos os comprovantes e prints das compras'
      ],
      tips: 'PROTE√á√ÉO: Prefira sites conhecidos e evite ofertas enviadas por WhatsApp ou redes sociais.'
    }
  };

  // Gerenciar modais de solu√ß√£o
  const solutionModal = modals.solutions;
  const closeButtons = document.querySelectorAll('.close-modal');
  
  // Abrir modal ao clicar nos golpes
  document.querySelectorAll('.threat-item').forEach(button => {
    button.addEventListener('click', () => {
      const content = solutionContent[button.dataset.modal];
      console.log('Clicou no golpe:', button.dataset.modal); // Debug
      
      // Preencher conte√∫do do modal
      solutionModal.querySelector('.solution-icon').textContent = content.icon;
      solutionModal.querySelector('.solution-title').textContent = content.title;
      
      // Criar conte√∫do da solu√ß√£o
      solutionModal.querySelector('.solution-description').textContent = content.description;
      
      // Criar lista de passos
      const stepsHtml = `
        <h4>Como se proteger:</h4>
        <ol>
          ${content.steps.map(step => `<li>${step}</li>`).join('')}
        </ol>
      `;
      solutionModal.querySelector('.solution-steps').innerHTML = stepsHtml;
      
      // Adicionar dicas
      solutionModal.querySelector('.solution-tips').textContent = content.tips;
      
      // Mostrar modal
      solutionModal.style.display = 'block';
      document.body.style.overflow = 'hidden'; // Prevenir scroll
    });
  });
  
  // Fechar modais
  closeButtons.forEach(button => {
    button.addEventListener('click', () => {
      button.closest('.solution-modal').style.display = 'none';
      document.body.style.overflow = 'auto'; // Restaurar scroll
    });
  });
  
  // Fechar modal ao clicar fora
  window.addEventListener('click', (event) => {
    if (event.target.classList.contains('solution-modal')) {
      event.target.style.display = 'none';
      document.body.style.overflow = 'auto';
    }
  });

  // Manipula√ß√£o dos modais de dicas
  const modalContent = {
    'senha': {
      title: 'Como Criar Senhas Seguras',
      steps: [
        'Use pelo menos 8 caracteres',
        'Combine letras mai√∫sculas e min√∫sculas',
        'Adicione n√∫meros e s√≠mbolos',
        'Evite informa√ß√µes pessoais',
        'Use senhas diferentes para cada servi√ßo'
      ]
    },
    '2fa': {
      title: 'Ativar Verifica√ß√£o em Duas Etapas',
      steps: [
        'Abra as configura√ß√µes do WhatsApp',
        'Acesse "Conta"',
        'Selecione "Verifica√ß√£o em duas etapas"',
        'Configure um PIN de 6 d√≠gitos',
        'Adicione um e-mail de recupera√ß√£o (opcional)'
      ]
    },
    'update': {
      title: 'Manter o Celular Atualizado',
      steps: [
        'Abra as Configura√ß√µes do celular',
        'Procure por "Atualiza√ß√£o do sistema"',
        'Toque em "Verificar atualiza√ß√µes"',
        'Se houver update, fa√ßa backup antes',
        'Instale a atualiza√ß√£o e reinicie'
      ]
    },
    'wifi': {
      title: 'Usar Wi-Fi com Seguran√ßa',
      steps: [
        'Evite redes p√∫blicas para opera√ß√µes sens√≠veis',
        'Verifique se a rede tem senha',
        'Use dados m√≥veis para apps banc√°rios',
        'Mantenha o Wi-Fi desligado quando n√£o usar',
        'N√£o salve senhas em redes p√∫blicas'
      ]
    }
  };

  // Criar o modal no HTML
  const modalHTML = `
    <div id="modal" class="modal">
      <div class="modal-content">
        <span class="close-modal">&times;</span>
        <h3 id="modal-title"></h3>
        <ul id="modal-steps"></ul>
      </div>
    </div>
  `;
  document.body.insertAdjacentHTML('beforeend', modalHTML);

  // Adicionar estilos do modal
  const styleSheet = document.createElement('style');
  styleSheet.textContent = `
    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0,0,0,0.5);
      z-index: 1000;
    }
    .modal-content {
      background-color: white;
      margin: 15% auto;
      padding: 2rem;
      border-radius: 0.5rem;
      max-width: 500px;
      position: relative;
    }
    .close-modal {
      position: absolute;
      right: 1rem;
      top: 0.5rem;
      font-size: 1.5rem;
      cursor: pointer;
    }
    #modal-steps {
      list-style-position: inside;
      padding-left: 0;
    }
    #modal-steps li {
      margin-bottom: 0.5rem;
    }
  `;
  document.head.appendChild(styleSheet);

  // Gerenciar os modais
  const modal = document.getElementById('modal');
  const modalTitle = document.getElementById('modal-title');
  const modalSteps = document.getElementById('modal-steps');
  const closeModal = document.querySelector('.close-modal');

  // Abrir modal
  document.querySelectorAll('.ver-mais').forEach(button => {
    button.addEventListener('click', () => {
      const content = modalContent[button.dataset.modal];
      modalTitle.textContent = content.title;
      modalSteps.innerHTML = content.steps
        .map(step => `<li>${step}</li>`)
        .join('');
      modal.style.display = 'block';
    });
  });

  // Fechar modal
  closeModal.addEventListener('click', () => {
    modal.style.display = 'none';
  });

  window.addEventListener('click', (event) => {
    if (event.target === modal) {
      modal.style.display = 'none';
    }
  });

  // Valida√ß√£o do formul√°rio
  const form = document.getElementById('contactForm');
  if (form) {
    form.addEventListener('submit', (e) => {
      e.preventDefault();
      // Aqui voc√™ pode adicionar sua l√≥gica de envio do formul√°rio
      alert('Mensagem enviada com sucesso!');
      form.reset();
    });
  }

  // ========================================
  // SISTEMA DE ANALYTICS SIMPLES E R√ÅPIDO
  // ========================================
  
  class SimpleAnalytics {
    constructor() {
      this.storageKey = 'internet-segura-analytics';
      this.data = this.loadData();
      this.init();
    }

    loadData() {
      const stored = localStorage.getItem(this.storageKey);
      if (stored) {
        return JSON.parse(stored);
      }
      return {
        totalVisits: 0,
        dailyVisits: {},
        pageViews: 0,
        uniqueVisitors: 0,
        lastVisit: null,
        sessionStart: Date.now(),
        referrers: {},
        devices: {},
        browsers: {},
        countries: {},
        firstVisit: Date.now()
      };
    }

    saveData() {
      localStorage.setItem(this.storageKey, JSON.stringify(this.data));
    }

    init() {
      this.trackVisit();
      this.trackPageView();
      this.updateDisplay();
      this.trackDevice();
      this.trackBrowser();
      
      // Salvar dados a cada 30 segundos
      setInterval(() => this.saveData(), 30000);
      
      // Salvar ao fechar a p√°gina
      window.addEventListener('beforeunload', () => this.saveData());
    }

    trackVisit() {
      const today = new Date().toDateString();
      const now = Date.now();
      
      // Verificar se √© uma nova sess√£o (mais de 30 minutos desde a √∫ltima visita)
      const lastVisit = this.data.lastVisit;
      const isNewSession = !lastVisit || (now - lastVisit) > 30 * 60 * 1000;
      
      if (isNewSession) {
        this.data.totalVisits++;
        this.data.uniqueVisitors++;
        this.data.lastVisit = now;
        
        // Contar visitas di√°rias
        if (!this.data.dailyVisits[today]) {
          this.data.dailyVisits[today] = 0;
        }
        this.data.dailyVisits[today]++;
        
        // Rastrear referrer
        const referrer = document.referrer || 'Direct';
        if (!this.data.referrers[referrer]) {
          this.data.referrers[referrer] = 0;
        }
        this.data.referrers[referrer]++;
      }
    }

    trackPageView() {
      this.data.pageViews++;
    }

    trackDevice() {
      const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
      const device = isMobile ? 'Mobile' : 'Desktop';
      
      if (!this.data.devices[device]) {
        this.data.devices[device] = 0;
      }
      this.data.devices[device]++;
    }

    trackBrowser() {
      const userAgent = navigator.userAgent;
      let browser = 'Unknown';
      
      if (userAgent.includes('Chrome')) browser = 'Chrome';
      else if (userAgent.includes('Firefox')) browser = 'Firefox';
      else if (userAgent.includes('Safari')) browser = 'Safari';
      else if (userAgent.includes('Edge')) browser = 'Edge';
      
      if (!this.data.browsers[browser]) {
        this.data.browsers[browser] = 0;
      }
      this.data.browsers[browser]++;
    }

    updateDisplay() {
      // Atualizar contadores principais
      const visitCounter = document.getElementById('visit-counter');
      const sessionCounter = document.getElementById('session-counter');
      const pageViewsCounter = document.getElementById('page-views');
      const uniqueVisitorsCounter = document.getElementById('unique-visitors');
      
      if (visitCounter) {
        visitCounter.textContent = this.data.totalVisits.toLocaleString('pt-BR');
      }
      
      if (sessionCounter) {
        const today = new Date().toDateString();
        const todayVisits = this.data.dailyVisits[today] || 0;
        sessionCounter.textContent = todayVisits.toLocaleString('pt-BR');
      }

      if (pageViewsCounter) {
        pageViewsCounter.textContent = this.data.pageViews.toLocaleString('pt-BR');
      }

      if (uniqueVisitorsCounter) {
        uniqueVisitorsCounter.textContent = this.data.uniqueVisitors.toLocaleString('pt-BR');
      }

      // Atualizar estat√≠sticas detalhadas
      this.updateDetailedStats();
    }

    updateDetailedStats() {
      const stats = this.getStats();
      
      // Atualizar dispositivos
      const deviceStats = document.getElementById('device-stats');
      if (deviceStats) {
        deviceStats.innerHTML = Object.entries(stats.deviceStats)
          .map(([device, count]) => `<span class="device-item">${device}: ${count.toLocaleString('pt-BR')}</span>`)
          .join(' | ');
      }

      // Atualizar navegadores
      const browserStats = document.getElementById('browser-stats');
      if (browserStats) {
        browserStats.innerHTML = Object.entries(stats.browserStats)
          .map(([browser, count]) => `<span class="browser-item">${browser}: ${count.toLocaleString('pt-BR')}</span>`)
          .join(' | ');
      }

      // Atualizar m√©dia di√°ria
      const averageDaily = document.getElementById('average-daily');
      if (averageDaily) {
        const statNumber = averageDaily.querySelector('.stat-number');
        if (statNumber) {
          statNumber.textContent = stats.averageVisitsPerDay.toLocaleString('pt-BR');
        }
      }

      // Atualizar √∫ltima atualiza√ß√£o
      const lastUpdate = document.getElementById('last-update');
      if (lastUpdate) {
        const timeText = lastUpdate.querySelector('.time-text');
        if (timeText) {
          timeText.textContent = new Date().toLocaleTimeString('pt-BR');
        }
      }
    }

    getStats() {
      const today = new Date().toDateString();
      const todayVisits = this.data.dailyVisits[today] || 0;
      const daysSinceFirst = Math.ceil((Date.now() - this.data.firstVisit) / (1000 * 60 * 60 * 24));
      
      return {
        totalVisits: this.data.totalVisits,
        todayVisits: todayVisits,
        pageViews: this.data.pageViews,
        uniqueVisitors: this.data.uniqueVisitors,
        averageVisitsPerDay: Math.round(this.data.totalVisits / Math.max(daysSinceFirst, 1)),
        topReferrers: Object.entries(this.data.referrers)
          .sort(([,a], [,b]) => b - a)
          .slice(0, 5),
        deviceStats: this.data.devices,
        browserStats: this.data.browsers,
        lastVisit: this.data.lastVisit,
        firstVisit: this.data.firstVisit
      };
    }

    exportData() {
      const stats = this.getStats();
      const dataToExport = {
        ...stats,
        rawData: this.data,
        exportDate: new Date().toISOString(),
        projectName: 'Internet Segura e Sem Mist√©rios'
      };
      
      const blob = new Blob([JSON.stringify(dataToExport, null, 2)], {
        type: 'application/json'
      });
      
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = `analytics-internet-segura-${new Date().toISOString().split('T')[0]}.json`;
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      URL.revokeObjectURL(url);
    }

    generateReport() {
      const stats = this.getStats();
      const report = `
RELAT√ìRIO DE ANALYTICS - INTERNET SEGURA
========================================

Per√≠odo: ${new Date(stats.firstVisit).toLocaleDateString('pt-BR')} at√© ${new Date().toLocaleDateString('pt-BR')}

M√âTRICAS PRINCIPAIS:
‚Ä¢ Total de Visitas: ${stats.totalVisits.toLocaleString('pt-BR')}
‚Ä¢ Visitas Hoje: ${stats.todayVisits.toLocaleString('pt-BR')}
‚Ä¢ Visualiza√ß√µes de P√°gina: ${stats.pageViews.toLocaleString('pt-BR')}
‚Ä¢ Visitantes √önicos: ${stats.uniqueVisitors.toLocaleString('pt-BR')}
‚Ä¢ M√©dia de Visitas/Dia: ${stats.averageVisitsPerDay.toLocaleString('pt-BR')}

DISPOSITIVOS:
${Object.entries(stats.deviceStats).map(([device, count]) => `‚Ä¢ ${device}: ${count.toLocaleString('pt-BR')}`).join('\n')}

NAVEGADORES:
${Object.entries(stats.browserStats).map(([browser, count]) => `‚Ä¢ ${browser}: ${count.toLocaleString('pt-BR')}`).join('\n')}

PRINCIPAIS REFERRERS:
${stats.topReferrers.map(([ref, count]) => `‚Ä¢ ${ref}: ${count.toLocaleString('pt-BR')}`).join('\n')}

√öLTIMA ATUALIZA√á√ÉO: ${new Date().toLocaleString('pt-BR')}
      `;
      
      return report;
    }
  }

  // Inicializar analytics
  window.analytics = new SimpleAnalytics();

  // Adicionar bot√µes de controle (se existir a se√ß√£o de stats)
  const statsSection = document.querySelector('.stats-section');
  if (statsSection) {
    const controlsHTML = `
      <div class="analytics-controls" style="margin-top: 20px; text-align: center;">
        <button onclick="window.analytics.exportData()" class="export-btn" style="background: #007bff; color: white; border: none; padding: 10px 20px; border-radius: 5px; margin: 5px; cursor: pointer;">
          üìä Exportar Dados
        </button>
        <button onclick="alert(window.analytics.generateReport())" class="report-btn" style="background: #28a745; color: white; border: none; padding: 10px 20px; border-radius: 5px; margin: 5px; cursor: pointer;">
          üìã Gerar Relat√≥rio
        </button>
        <button onclick="window.analytics.updateDisplay()" class="refresh-btn" style="background: #ffc107; color: black; border: none; padding: 10px 20px; border-radius: 5px; margin: 5px; cursor: pointer;">
          üîÑ Atualizar
        </button>
      </div>
    `;
    statsSection.insertAdjacentHTML('beforeend', controlsHTML);
  }

  // Atualizar display a cada 5 segundos
  setInterval(() => {
    if (window.analytics) {
      window.analytics.updateDisplay();
    }
  }, 5000);

  // Fun√ß√µes auxiliares para o dashboard
  window.copyToClipboard = function(text) {
    navigator.clipboard.writeText(text).then(() => {
      alert('Relat√≥rio copiado para a √°rea de transfer√™ncia!');
    }).catch(() => {
      // Fallback para navegadores mais antigos
      const textArea = document.createElement('textarea');
      textArea.value = text;
      document.body.appendChild(textArea);
      textArea.select();
      document.execCommand('copy');
      document.body.removeChild(textArea);
      alert('Relat√≥rio copiado para a √°rea de transfer√™ncia!');
    });
  };

  window.showDetailedStats = function() {
    const modal = document.getElementById('detailed-stats-modal');
    const content = document.getElementById('detailed-content');
    
    if (window.analytics) {
      const stats = window.analytics.getStats();
      
      content.innerHTML = `
        <div class="detailed-stats-content">
          <h4>üìä Resumo Executivo</h4>
          <div class="stats-summary">
            <p><strong>Per√≠odo:</strong> ${new Date(stats.firstVisit).toLocaleDateString('pt-BR')} at√© ${new Date().toLocaleDateString('pt-BR')}</p>
            <p><strong>Total de Visitas:</strong> ${stats.totalVisits.toLocaleString('pt-BR')}</p>
            <p><strong>Visitas Hoje:</strong> ${stats.todayVisits.toLocaleString('pt-BR')}</p>
            <p><strong>Visualiza√ß√µes de P√°gina:</strong> ${stats.pageViews.toLocaleString('pt-BR')}</p>
            <p><strong>Visitantes √önicos:</strong> ${stats.uniqueVisitors.toLocaleString('pt-BR')}</p>
            <p><strong>M√©dia Di√°ria:</strong> ${stats.averageVisitsPerDay.toLocaleString('pt-BR')} visitas/dia</p>
          </div>

          <h4>üì± Dispositivos Utilizados</h4>
          <div class="device-breakdown">
            ${Object.entries(stats.deviceStats).map(([device, count]) => 
              `<div class="device-bar">
                <span class="device-name">${device}</span>
                <div class="device-progress">
                  <div class="device-fill" style="width: ${(count / Math.max(...Object.values(stats.deviceStats))) * 100}%"></div>
                </div>
                <span class="device-count">${count.toLocaleString('pt-BR')}</span>
              </div>`
            ).join('')}
          </div>

          <h4>üåê Navegadores</h4>
          <div class="browser-breakdown">
            ${Object.entries(stats.browserStats).map(([browser, count]) => 
              `<div class="browser-bar">
                <span class="browser-name">${browser}</span>
                <div class="browser-progress">
                  <div class="browser-fill" style="width: ${(count / Math.max(...Object.values(stats.browserStats))) * 100}%"></div>
                </div>
                <span class="browser-count">${count.toLocaleString('pt-BR')}</span>
              </div>`
            ).join('')}
          </div>

          <h4>üîó Principais Referrers</h4>
          <div class="referrer-list">
            ${stats.topReferrers.map(([ref, count]) => 
              `<div class="referrer-item">
                <span class="referrer-name">${ref === 'Direct' ? 'Acesso Direto' : ref}</span>
                <span class="referrer-count">${count.toLocaleString('pt-BR')}</span>
              </div>`
            ).join('')}
          </div>

          <div class="export-actions">
            <button onclick="window.analytics.exportData()" class="export-btn">üìä Exportar Dados Completos</button>
            <button onclick="copyToClipboard(window.analytics.generateReport())" class="report-btn">üìã Copiar Relat√≥rio</button>
          </div>
        </div>
      `;
    }
    
    modal.style.display = 'block';
    document.body.style.overflow = 'hidden';
  };

  window.closeDetailedStats = function() {
    const modal = document.getElementById('detailed-stats-modal');
    modal.style.display = 'none';
    document.body.style.overflow = 'auto';
  };

  // Fechar modal ao clicar fora
  window.addEventListener('click', (event) => {
    const modal = document.getElementById('detailed-stats-modal');
    if (event.target === modal) {
      closeDetailedStats();
    }
  });
});